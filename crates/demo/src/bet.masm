use.std::sys
use.std::math::u64
use.miden::account
use.miden::tx
use.miden::contracts::auth::basic->auth_tx


# CONSTANTS
# =================================================================================================

# The reference price storage
const.PRICE_STORAGE_SLOT=0

#! Mapping containing the result bet by operators.
const.OPERATOR_BET_SLOT=1

#! Mapping containing the amount bet by operators.
const.OPERATOR_AMOUNT_SLOT=2

#! Mapping containing the result for each operator
const.OPERATOR_RESULT_SLOT=3




#! Calls the ORACLE_ID get_median procedure of the provided account.
#!
#! Inputs: [ORACLE_ID, PAIR]
#! Output: [ENTRY]
proc.call_oracle_get_median

    # push.0x1f1481757ac8f3523b302291b26ee34cd2e6223aeda81d1aa268c0cffd965157 -> Good procedure 
    push.0x50146c70407dcfa717985f4728e3c8e678dd51b0d1368b72b0f172b1e67a69aa
    # => [GET_MEDIAN_HASH, ORACLE_ID, PAIR]
    swapw swap.2 drop swap.2 drop
    # => [oracle_id,oracle_id,  GET_ENTRY_HASH, PAIR]
    exec.tx::execute_foreign_procedure
    # => [price]
end


#! Set the current reference price 
#! Inputs: [ORACLE_ID,PAIR]
#! Outputs: []
export.set_reference_price
    exec.call_oracle_get_median
    # -> [median]
    #push.PRICE_STORAGE_SLOT exec.account::set_item
    #push.1 exec.account::incr_nonce
    exec.sys::truncate_stack
end

#! Bet that the price evolution
#! Inputs: [OPERATOR, IS_GREATER, OPERATOR, VALUE_SENT]
#! Outputs: []
export.set_bet
    push.OPERATOR_BET_SLOT exec.account::set_map_item
    # -> [VALUE_SENT]
    push.OPERATOR_AMOUNT_SLOT exec.account::set_map_item
    push.1 exec.account::incr_nonce
    exec.sys::truncate_stack
end 


#! Set the current reference price 
#! Inputs: [ORACLE_ID,PAIR, SENDER]
#! Outputs: []
export.check_result
   exec.call_oracle_get_median
   # -> [median,SENDER]


   # TO BE REMOVED 
   push.9812310321


   push.PRICE_STORAGE_SLOT exec.account::get_item
   swap swap
   debug.stack
   # -> [PRICE, median,SENDER]
   drop drop drop
   # -> [price, median,SENDER]
   gt
   # -> [bool,SENDER]
   push.0.0.0
   # -> [BOOL,SENDER]
   swapw
   # -> [SENDER,BOOL]
   dupw
    # -> [SENDER,SENDER,BOOL]
   movdnw.3
    # -> [SENDER,BOOL,SENDER]
   push.OPERATOR_BET_SLOT exec.account::get_map_item
   # -> [BOOL, BOOL, SENDER]
   eqw
   # -> [bool, BOOL, BOOL, SENDER]
   push.0.0.0
    # -> [BOOL, BOOL, BOOL, SENDER]
    swapw dropw swapw dropw
    # => [BOOL, SENDER]
    swapw
    # => [SENDER,BOOL]
    push.OPERATOR_RESULT_SLOT exec.account::set_map_item 

    # => []
    push.1 exec.account::incr_nonce
    exec.sys::truncate_stack

end





