use.std::sys
use.miden::account

# CONSTANTS
# =================================================================================================

#! Mapping containing the prices published for the fetcher.
const.ENTRIES_MAP_SLOT=1

#! Writes a new entry.
#! Must be called by the publisher.
#! The price will be stored in the publisher map for the given asset, overriding the
#! last value.
#!
#! Inputs:  [PAIR, ENTRY]
#! Outputs: []
#!
export.publish_entry
    push.ENTRIES_MAP_SLOT exec.account::set_map_item

    # Only the publisher owner should be able to call this
    call.::miden::contracts::auth::basic::auth_tx_rpo_falcon512

    # Truncate just in case
    exec.sys::truncate_stack
end

#! Get the published entry for a pair.
#!
#! Inputs:  [PAIR]
#! Outputs: [ENTRY] ; Word being [pair, price, decimals, timestamp]
#!
export.get_entry
    push.ENTRIES_MAP_SLOT

    # => [entries_map_slot, PAIR]
    exec.account::get_map_item

    # increments the nonce (anyone should be able to call that function)
    push.1 exec.account::incr_nonce

    # => [ENTRY]
    exec.sys::truncate_stack
end
