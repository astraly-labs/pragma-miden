use.std::sys
use.miden::account

#Â ERRORS
# =================================================================================================

# Raised when we try to read a pair not published.
const.ERR_PAIR_NOT_FOUND=0x0002004A

# CONSTANTS
# =================================================================================================

#! Mapping containing the prices published for the fetcher.
const.ENTRIES_MAP_SLOT=0

#! Writes a new entry into the Oracle.
#! Must be called by a registered publisher.
#! The price will be stored in the publisher map for the given asset, overriding the
#! last value.
#!
#! Inputs:  [pair, entry]
#! Outputs: []
#!
export.publish_entry
    # TODO: check error handling, how do we validate inputs?
    exec.account::set_map_item

    # Only the publisher owner should be able to call this
    call.::miden::contracts::auth::basic::auth_tx_rpo_falcon512

    # Truncate just in case
    exec.sys::truncate_stack
end

#! Gets entry from the oracle's data slots.
#!
#! Inputs:  [pair]
#! Outputs: [WORD] ; Word being [pair, price, decimals, timestamp]
#!
export.get_entry
    # TODO: check error handling, how do we validate inputs?
    push.ENTRIES_MAP_SLOT exec.account::get_map_item

    # increments the nonce (anyone should be able to call that function)
    push.1 exec.account::incr_nonce

    # Truncate just in case
    exec.sys::truncate_stack
end
